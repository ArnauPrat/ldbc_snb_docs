workload: Interactive
operation: complex
number: 6
title: Tag co-occurrence
description: |
  Given a start *Person* and some *Tag*, find the other *Tags* that occur together with this *Tag* on *Posts* that were created by start *Person*'s friends and friends of friends (excluding start *Person*). Return top 10 *Tags*, and the count of *Posts* that were created by these *Persons*, which contain both this *Tag* and the given *Tag*.
parameters:
  - name: Person.id
    type: ID
    description: "`personId`"
  - name: Tag.name
    type: Long String
    description: "`tagName` (`tag.name`)"
result:
  - name: Tag.name
    type: Long String
    description: "`tagName` (`otherTag.name`)"
  - name: postCount
    type: 32-bit Integer
    category: aggregated
    description: "`postCount` -- Number of *Posts* that were created by friends and friends of friends, which contain this *Tag*"
sort:
  - name: postCount
    direction: desc
  - name: Tag.name
    direction: asc
limit: 10
choke_points: [5.1, 8.2]
relevance: |
  This query looks for paths of lengths three or four, starting from a given *Person*, moving to friends or friends of friends, then to *Posts* and finally ending at a given *Tag*.
