workload: BI
operation: read
number: 10
title: Experts in social circle
description: |
  Given a *Person* `startPerson` with ID `$personID`, find all other *Persons* (`expertCandidatePerson`) that live in a given `$country` and are connected to the `startPerson` on a **shortest path** with length in range `[$minPathDistance, $maxPathDistance]` through the *knows* relation.

  For each of these `expertCandidatePerson` nodes, retrieve all of their *Messages* that contain at least one *Tag* belonging to a given `$tagClass` (direct relation not transitive). For each *Message*, retrieve all of its *Tags*.

  Group the results by *Persons* and *Tags*, then count the *Messages* by a certain *Person* having a certain *Tag*.
parameters:
  - name: personId
    type: ID
    description: |
      `(a)` *Persons* with an average degree of *knows* edges are selected

      `(b)` *Persons* who have only one friend and that *Person* has two friends in total (including the original *Person*)
  - name: country
    type: String
    description: |
      Select mid-sized *Countries*
  - name: tagClass
    type: Long String
    description: |
      *TagClasses* with a similar degree of *hasType* edges are selected
  - name: minPathDistance
    type: 32-bit Integer
    description: |
      3
  - name: maxPathDistance
    type: 32-bit Integer
    description: |
      4
result:
  - name: expertCandidatePerson.id
    type: ID
  - name: tag.name
    type: Long String
  - name: messageCount
    type: 32-bit Integer
    category: aggregated
    description: Number of *Messages* created by that *Person* containing that *Tag*
sort:
  - name: messageCount
    direction: desc
  - name: tag.name
    direction: asc
  - name: expertCandidatePerson.id
    direction: asc
limit: 100
choke_points: [1.2, 1.3, 2.3, 2.4, 2.6, 3.3, 5.3, 7.1, 7.2, 7.3, 8.1, 8.6]
