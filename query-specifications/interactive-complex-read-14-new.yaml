workload: Interactive
operation: complex
number: 14 new
title: Trusted connection paths (new version)
description: |
  **This query is used in the new version of SNB Interactive (v2.0+).**

  Find a cheapest path between two given *Persons* with IDs `$person1Id` and `$person2Id`, in the interaction subgraph. If there are multiple cheapest paths, return any of them can be returned. Do not return any rows if there is no path between the *Persons*.

  The interaction subgraph is based on the *Person*-*knows*-*Person* graph where the *Person* endpoints of each *knows* edge have at least one interaction between them.

  An interaction is defined as a direct reply *Comment* (by one of the *Persons*) to a *Message* (by the other *Person*). The weights are defined as:
  $\max(\mathrm{round}( 40 - \sqrt{\textit{numInteractions}} ), 1)$

  **Note:** Interactions are counted both ways, e.g. if Alice *knows* Bob, Alice writes 2 reply *Comments* to Bob's *Messages*
  and Bob writes 3 reply *Comments* to Alice's *Messages*, their total number of interactions is 5 and the weight of the knows edge is 0.2.

  **Remark:** Determinism is ensured by using square root followed by rounding.
  For all integers between 1 and $\numprint{100000}$, the square root's fractional part is more than 10e-5 from 0.5, where the rounding could be non-determinstic based on floating point inaccuracies. As 10e-5 is significantly larger than the machine epsilon of IEEE 754 floats (both 32- and 64-bit), the floating point inaccuracies have no chance to affect the derived integer edge weights.
parameters:
  - name: person1Id
    type: ID
    description: |
      `(b)` Guaranteed that there is no path between the two *Persons*

      `(b)` Guaranteed that there is a 4-hop path between the two *Persons*
  - name: person2Id
    type: ID
result:
  - name: personIdsInPath
    type: '[ID]'
    description: Identifiers representing an ordered sequence of the *Persons* in the path
    category: calculated
  - name: pathWeight
    type: 64-bit Integer
    category: calculated
choke_points: [3.3, 5.3, 7.2, 7.3, 7.5, 7.7, 7.8, 8.1, 8.2, 8.3, 8.6] #TODO
relevance: |
  This query tests the performance of cheapest path (weighted shortest path) computation.
  It uses integer edge weights to prevent inaccuracies introduced by floating-point number representation to cause differences in query results.
