workload: Interactive
operation: complex
number: 11
title: Job referral
description: |
  Given a start *Person*, find that *Person*'s friends and friends of friends (excluding start *Person*) who started working in some *Company* in a given *Country*, before a given date (`year`).
parameters:
  - name: Person.id
    type: ID
    description: "`personId`"
  - name: Country.name
    type: String
    description: "`countryName`"
  - name: year
    type: 32-bit Integer
    description: "`workFromYear`"
result:
  - name: Person.id
    type: ID
    description: "`personId`"
  - name: Person.firstName
    type: String
    description: "`personFirstName`"
  - name: Person.lastName
    type: String
    description: "`personLastName`"
  - name: Person-workAt->Company.name
    type: String
    description: "`organizationName`"
  - name: Person-workAt->.worksFrom
    type: 32-bit Integer
    description: "`organizationWorkFromYear`"
sort:
  - name: Person-workAt->.worksFrom
    direction: asc
  - name: Person.id
    direction: asc
  - name: Person-workAt->Company.name
    direction: desc
limit: 10
choke_points: [1.3, 2.3, 2.4, 3.3, 4.2]
relevance: |
  This query looks for paths of length two or three, starting from a *Person*, moving to friends or friends of friends, and ending at a *Company*. In this query, there are selective joins and a top-k order by that can be exploited for optimizations.
