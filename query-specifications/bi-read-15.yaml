workload: BI
operation: read
number: 15
title: Trusted connection paths through forums created in a given timeframe
description: |
  Given two *Persons*, find all (unweighted) shortest paths between these two *Persons*, in the subgraph induced by the *knows* relationship.

  Then, for each path calculate a weight. The nodes in the path are *Persons*, and the weight of a path is the sum of weights between every pair of consecutive *Person* nodes in the path.

  The weight for a pair of *Persons* is calculated based on their interactions:

  * Every direct reply (by one of the *Persons*) to a *Post* (by the other *Person*) contributes 1.0.
  * Every direct reply (by one of the *Persons*) to a *Comment* (by the other *Person*) contributes 0.5.

  Only consider *Messages* that were created in a *Forum* that was created within the timeframe (interval) `[startDate, endDate]`. Note that for *Comments*, the containing *Forum* is that of the *Post* that the comment (transitively) replies to. Also note that interactions are counted both ways.

  Return all paths with the *Person* IDs ordered by their weights descending.
parameters:
  - name: person1Id
    type: ID
    desc: TODO - how?
  - name: person2Id
    type: ID
    desc: TODO - how?
  - name: startDate
    type: Date
  - name: endDate
    type: Date
result:
  - name: person.id
    type: \[ID\]
    category: calculated
    description: Ordered sequence of the *Person* IDs in the path
  - name: weight
    category: calculated
    type: 64-bit Float
sort:
  - name: weight
    direction: desc
    description: The order of paths with the same weight is unspecified
  - name: personIds
    direction: asc
    description: The IDs in the paths are used for lexicographical sorting
choke_points: [1.2, 2.1, 2.2, 2.4, 3.3, 5.1, 5.3, 7.2, 7.3, 7.5, 7.7, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6]
# why is this 2.2 late projection? there aren't even any attributes other than for filtering
